mutate(cluster1_high = n1 > n2)
wilcox_out <- sub_kos %>%
select(KO, Cluster, CPM) %>%
distinct() %>%
group_by(KO) %>%
wilcox_test(., CPM ~ Cluster) %>%
adjust_pvalue(method = "fdr") %>%
add_significance("p.adj") %>%
mutate(cluster1_high = n1 > n2) %>%
# add back the subgroups
left_join(., pfgip_sp, by = "KO")
View(wilcox_out)
wilcox_out <- sub_kos %>%
select(KO, Cluster, CPM) %>%
distinct() %>%
group_by(subpath) %>% # KO
wilcox_test(., CPM ~ Cluster) %>%
adjust_pvalue(method = "fdr") %>%
add_significance("p.adj") %>%
mutate(cluster1_high = n1 > n2)
wilcox_out <- sub_kos %>%
select(subpath, Cluster, CPM) %>% # KO subpath
distinct() %>%
group_by(subpath) %>% # KO subpath
wilcox_test(., CPM ~ Cluster) %>%
adjust_pvalue(method = "fdr") %>%
add_significance("p.adj") %>%
mutate(cluster1_high = n1 > n2)
# now get the species of these KOs from the original table
plot_table <- humann3_KO_worldo %>%
full_join(., humann3_GFs, by = "GeneFamily") %>%
replace(is.na(.), 0) %>%
# remove non-human primates and modern samples
select(-matches(nhp %>% str_c(collapse = "|"))) %>%
# remove poorly preserved samples
select(-matches(poor_samples %>% str_c(collapse = "|"))) %>%
select(-matches(blanks %>% str_c(collapse = "|"))) %>%
select(-matches(under750 %>% str_c(collapse = "|"))) %>%
# get only the selected KOs
filter(str_detect(GeneFamily, enriched_groups %>% str_c(collapse = "|")))
View(plot_table)
# now get the species of these KOs from the original table
plot_table <- humann3_KO_worldo %>%
full_join(., humann3_GFs, by = "GeneFamily") %>%
replace(is.na(.), 0) %>%
# remove non-human primates and modern samples
select(-matches(nhp %>% str_c(collapse = "|"))) %>%
# remove poorly preserved samples
select(-matches(poor_samples %>% str_c(collapse = "|"))) %>%
select(-matches(blanks %>% str_c(collapse = "|"))) %>%
select(-matches(under750 %>% str_c(collapse = "|"))) %>%
# get only the selected KOs
filter(str_detect(GeneFamily, enriched_groups %>% str_c(collapse = "|"))) %>%
# select only the levels with species
filter(str_detect(GeneFamily, "\\|"))
# now get the species of these KOs from the original table
plot_table <- humann3_KO_worldo %>%
full_join(., humann3_GFs, by = "GeneFamily") %>%
replace(is.na(.), 0)
colnames(plot_table)
blanks
# now get the species of these KOs from the original table
plot_table <- humann3_KO_worldo %>%
full_join(., humann3_GFs, by = "GeneFamily") %>%
replace(is.na(.), 0) %>%
# remove non-human primates and modern samples
select(-matches(nhp %>% str_c(collapse = "|"))) %>%
# remove poorly preserved samples
select(-matches(poor_samples %>% str_c(collapse = "|"))) %>%
select(-matches(blanks %>% str_c(collapse = "|"))) %>%
select(-matches(under750 %>% str_c(collapse = "|")))
colnames(plot_table)
# now get the species of these KOs from the original table
plot_table <- humann3_KO_worldo %>%
full_join(., humann3_GFs, by = "GeneFamily") %>%
replace(is.na(.), 0) %>%
# remove non-human primates and modern samples
select(-matches(nhp %>% str_c(collapse = "|"))) %>%
# remove poorly preserved samples
select(-matches(poor_samples %>% str_c(collapse = "|"))) %>%
select(-matches(blanks %>% str_c(collapse = "|"))) %>%
select(-matches(under750 %>% str_c(collapse = "|"))) %>%
# get only the selected KOs
filter(str_detect(GeneFamily, enriched_groups %>% str_c(collapse = "|"))) %>%
# select only the levels with species
filter(str_detect(GeneFamily, "\\|")) %>%
adorn_totals(where = "row")  %>% select(GeneFamily, Total) %>% arrange(Total)
# now get the species of these KOs from the original table
plot_table <- humann3_KO_worldo %>%
full_join(., humann3_GFs, by = "GeneFamily") %>%
replace(is.na(.), 0) %>%
# remove non-human primates and modern samples
select(-matches(nhp %>% str_c(collapse = "|"))) %>%
# remove poorly preserved samples
select(-matches(poor_samples %>% str_c(collapse = "|"))) %>%
select(-matches(blanks %>% str_c(collapse = "|"))) %>%
select(-matches(under750 %>% str_c(collapse = "|"))) %>%
# get only the selected KOs
filter(str_detect(GeneFamily, enriched_groups %>% str_c(collapse = "|"))) %>%
# select only the levels with species
filter(str_detect(GeneFamily, "\\|")) %>%
adorn_totals(where = "col")  %>% select(GeneFamily, Total) %>% arrange(Total)
# now get the species of these KOs from the original table
plot_table <- humann3_KO_worldo %>%
full_join(., humann3_GFs, by = "GeneFamily") %>%
replace(is.na(.), 0) %>%
# remove non-human primates and modern samples
select(-matches(nhp %>% str_c(collapse = "|"))) %>%
# remove poorly preserved samples
select(-matches(poor_samples %>% str_c(collapse = "|"))) %>%
select(-matches(blanks %>% str_c(collapse = "|"))) %>%
select(-matches(under750 %>% str_c(collapse = "|"))) %>%
# get only the selected KOs
filter(str_detect(GeneFamily, enriched_groups %>% str_c(collapse = "|"))) %>%
# select only the levels with species
filter(str_detect(GeneFamily, "\\|")) %>%
# remove any GeneFamily species with a total of 0 counts
adorn_totals(where = "col")  %>%
filter(Total > 0) %>%
select(-Total)
View(plot_table)
# now get the species of these KOs from the original table
plot_table <- humann3_KO_worldo %>%
full_join(., humann3_GFs, by = "GeneFamily") %>%
replace(is.na(.), 0) %>%
# remove non-human primates and modern samples
select(-matches(nhp %>% str_c(collapse = "|"))) %>%
# remove poorly preserved samples
select(-matches(poor_samples %>% str_c(collapse = "|"))) %>%
select(-matches(blanks %>% str_c(collapse = "|"))) %>%
select(-matches(under750 %>% str_c(collapse = "|"))) %>%
# get only the selected KOs
filter(str_detect(GeneFamily, enriched_groups %>% str_c(collapse = "|"))) %>%
# select only the levels with species
filter(str_detect(GeneFamily, "\\|")) %>%
# remove any GeneFamily species with a total of 0 counts
adorn_totals(where = "col")  %>%
filter(Total > 0) %>%
select(-Total) %>%
# now break up the GeneFamily long name
separate(GeneFamily, into = c("KO","other"), sep = ": ") %>%
separate(other, into = c("Gene_name","Species"), sep = "\\|") %>%
separate(Species, into = c("Genus","Species"), sep = "\\.s__") %>%
mutate(Genus = str_replace_all(Genus, "g__",""))
View(plot_table)
# now get the species of these KOs from the original table
plot_table <- humann3_KO_worldo %>%
full_join(., humann3_GFs, by = "GeneFamily") %>%
replace(is.na(.), 0) %>%
# remove non-human primates and modern samples
select(-matches(nhp %>% str_c(collapse = "|"))) %>%
# remove poorly preserved samples
select(-matches(poor_samples %>% str_c(collapse = "|"))) %>%
select(-matches(blanks %>% str_c(collapse = "|"))) %>%
select(-matches(under750 %>% str_c(collapse = "|"))) %>%
# get only the selected KOs
filter(str_detect(GeneFamily, enriched_groups %>% str_c(collapse = "|"))) %>%
# select only the levels with species
filter(str_detect(GeneFamily, "\\|")) %>%
# remove any GeneFamily species with a total of 0 counts
adorn_totals(where = "col")  %>%
filter(Total > 0) %>%
select(-Total) %>%
# now break up the GeneFamily long name
separate(GeneFamily, into = c("KO","other"), sep = ": ") %>%
separate(other, into = c("Gene_name","Species"), sep = "\\|") %>%
separate(Species, into = c("Genus","Species"), sep = "\\.s__") %>%
mutate(Genus = str_replace_all(Genus, "g__","")) %>%
# convert to long table to add clusters
pivot_longer(!KO:Species, names_to = "Library_ID", values_to = "CPM") %>%
# now take only the samples that are in sample cluster 2
inner_join(., sample_cluster_info %>%
select(Library_ID, Cluster) %>%
# take only sample cluster 2
filter(Cluster == 2), by = "Library_ID") %>%
rename(Sample_cluster = Cluster) %>%
distinct()  %>%
# now add the pathway information for those KOs
left_join(., cluster_ko_paths %>%
filter(Cluster == 1) %>%
select(KO, name1, name2), by = "KO") %>%
drop_na(Sample_cluster) %>%
# make sure to have only the pathways of interest
filter(str_detect(name1, "09182"))
View(plot_table)
plot_table %>%
select(name2) %>%
unique()
# calculate the % for each ortholog contributed by each genus
sample_cluster2_stats <- plot_table %>%
select(-Gene_name, -Species) %>%
distinct() %>%
group_by(KO, Genus) %>%
summarize(Sum = sum(CPM)) %>%
mutate(Percent = Sum/sum(Sum)*100) %>%
ungroup(.)
so_subpaths <- plot_table %>%
select(name2) %>%
unique() %>%
pull()
# calculate the total % of all genera that contribute < X% to each ortholog
humann3_path_pc1pws_stats_extra <- lapply(so_subpaths, function(eclass) {
high_percent <- sample_cluster2_stats %>%
filter(KO == eclass) %>%
filter(Percent < 5) %>%
summarise(Remaining = sum(Percent)) %>%
mutate(KO = eclass,
Genus = "Other")
}) %>%
bind_rows(.)
# add this additional % to the main table
humann3_path_pcbi_bar_df <- humann3_path_pc1pws_stats_extra %>%
rename(Percent = Remaining) %>%
bind_rows(., sample_cluster2_stats %>%
select(-Sum)) %>%
select(KO, Genus, Percent) %>%
distinct() %>%
left_join(., cluster_ko_paths %>%
filter(str_detect(KO, so_subpaths  %>% str_c(collapse = "|"))) %>%
select(KO, name1, name2), by = "KO") %>%
filter(str_detect(name1, "09182")) %>%
separate(name2, into = "pathway", sep = "\\[", extra = "drop") %>%
arrange(KO)
# order the KOs by the heatmap dendrogram
ko_cl1_tcs <- kegg_cluster_info %>%
filter(str_detect(KEGG, so_subpaths %>% str_c(collapse = "|"))) %>%
filter(Cluster == 1) %>%
arrange(dendro_order) %>%
pull(KEGG)
kegg_cluster_info %>%
filter(str_detect(KEGG, so_subpaths %>% str_c(collapse = "|"))) %>%
filter(Cluster == 1) %>%
arrange(dendro_order)
path_order <- humann3_path_pcbi_bar_df %>%
mutate(KO = fct_relevel(KO, ko_cl1_tcs)) %>%
group_by(name1, pathway, KO) %>%
arrange(name1, pathway, KO) %>%
ungroup() %>%
select(pathway) %>%
unique() %>%
pull()
fig3 <- humann3_path_pcbi_bar_df %>%
# filter for only the KOs in KO cluster 1
filter(str_detect(KO, ko_cl1_tcs %>% str_c(collapse = "|"))) %>%
filter(Percent >= 5 | (Percent <= 5 & Genus == "Other")) %>% # filter out the genera with % < 5, but keep Other < 5
mutate(Genus = fct_relevel(Genus, "Other","unclassified"),
KO = fct_relevel(KO, ko_cl1_tcs),
pathway = fct_relevel(pathway, path_order)) %>%
arrange(pathway, KO) %>%
# mutate(Genus = fct_relevel(Genus, "Other","unclassified","Aggregatibacter","Capnocytophaga","Cardiobacterium","Eikenella","Haemophilus","Kingella","Lautropia","Neisseria","Ottowia","Streptococcus"),
#        Path = fct_relevel(Path, humann3_pathway_biplot_list %>%
#                             filter(Direction == "PC1+") %>%
#                             pull(Path))) %>%
ggplot(., aes(x=KO, y=Percent, fill = Genus)) +
geom_bar(stat = "identity") +
theme_minimal() +
scale_fill_manual(values = c("#B7B7B7","#616161", # "#F5F5F5" microshades_cvd_palette
"#DDFFA0","#97CE2F","#4E7705", # "#BDEC6F"
"#EFB6D6","#CC79A7","#7D3560", # "#A1527F",
"#A3E4D7","#48C9B0","#148F77", # "#56B4E9", "#43BA8F"
"#E7F4FF","#BCE1FF","#098BD9",
"#D8C7BE","#B78560","#7D3200",
"red","orange","yellow","green","cyan","blue","purple","magenta")) + #. "#009E73", "#7DCCFF", "#9D654C", "#CAA995" "#9E5C00"
theme(axis.text.y = element_text(size=16),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Percent") +
xlab("KEGG Ortholog") +
theme(title = element_text(size=12)) +
facet_grid(~pathway, scales = "free_x", space = 'free')
so_subpaths <- plot_table %>%
select(KO) %>%
unique() %>%
pull()
# calculate the total % of all genera that contribute < X% to each ortholog
humann3_path_pc1pws_stats_extra <- lapply(so_subpaths, function(eclass) {
high_percent <- sample_cluster2_stats %>%
filter(KO == eclass) %>%
filter(Percent < 5) %>%
summarise(Remaining = sum(Percent)) %>%
mutate(KO = eclass,
Genus = "Other")
}) %>%
bind_rows(.)
# add this additional % to the main table
humann3_path_pcbi_bar_df <- humann3_path_pc1pws_stats_extra %>%
rename(Percent = Remaining) %>%
bind_rows(., sample_cluster2_stats %>%
select(-Sum)) %>%
select(KO, Genus, Percent) %>%
distinct() %>%
left_join(., cluster_ko_paths %>%
filter(str_detect(KO, so_subpaths  %>% str_c(collapse = "|"))) %>%
select(KO, name1, name2), by = "KO") %>%
filter(str_detect(name1, "09182")) %>%
separate(name2, into = "pathway", sep = "\\[", extra = "drop") %>%
arrange(KO)
# order the KOs by the heatmap dendrogram
ko_cl1_tcs <- kegg_cluster_info %>%
filter(str_detect(KEGG, so_subpaths %>% str_c(collapse = "|"))) %>%
filter(Cluster == 1) %>%
arrange(dendro_order) %>%
pull(KEGG)
kegg_cluster_info %>%
filter(str_detect(KEGG, so_subpaths %>% str_c(collapse = "|"))) %>%
filter(Cluster == 1) %>%
arrange(dendro_order)
path_order <- humann3_path_pcbi_bar_df %>%
mutate(KO = fct_relevel(KO, ko_cl1_tcs)) %>%
group_by(name1, pathway, KO) %>%
arrange(name1, pathway, KO) %>%
ungroup() %>%
select(pathway) %>%
unique() %>%
pull()
fig3 <- humann3_path_pcbi_bar_df %>%
# filter for only the KOs in KO cluster 1
filter(str_detect(KO, ko_cl1_tcs %>% str_c(collapse = "|"))) %>%
filter(Percent >= 5 | (Percent <= 5 & Genus == "Other")) %>% # filter out the genera with % < 5, but keep Other < 5
mutate(Genus = fct_relevel(Genus, "Other","unclassified"),
KO = fct_relevel(KO, ko_cl1_tcs),
pathway = fct_relevel(pathway, path_order)) %>%
arrange(pathway, KO) %>%
# mutate(Genus = fct_relevel(Genus, "Other","unclassified","Aggregatibacter","Capnocytophaga","Cardiobacterium","Eikenella","Haemophilus","Kingella","Lautropia","Neisseria","Ottowia","Streptococcus"),
#        Path = fct_relevel(Path, humann3_pathway_biplot_list %>%
#                             filter(Direction == "PC1+") %>%
#                             pull(Path))) %>%
ggplot(., aes(x=KO, y=Percent, fill = Genus)) +
geom_bar(stat = "identity") +
theme_minimal() +
scale_fill_manual(values = c("#B7B7B7","#616161", # "#F5F5F5" microshades_cvd_palette
"#DDFFA0","#97CE2F","#4E7705", # "#BDEC6F"
"#EFB6D6","#CC79A7","#7D3560", # "#A1527F",
"#A3E4D7","#48C9B0","#148F77", # "#56B4E9", "#43BA8F"
"#E7F4FF","#BCE1FF","#098BD9",
"#D8C7BE","#B78560","#7D3200",
"red","orange","yellow","green","cyan","blue","purple","magenta")) + #. "#009E73", "#7DCCFF", "#9D654C", "#CAA995" "#9E5C00"
theme(axis.text.y = element_text(size=16),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Percent") +
xlab("KEGG Ortholog") +
theme(title = element_text(size=12)) +
facet_grid(~pathway, scales = "free_x", space = 'free')
fig3
humann3_path_pcbi_bar_df %>%
filter(KO == "K03781")
# ggsave("./06-publication/main_figures/Figure_4/KOs_clusters_species.pdf", plot = fig3, device = "pdf",
#        scale = 1, width = 20, height = 3, units = c("in"), dpi = 300)
humann3_path_pcbi_bar_df %>%
select(pathway) %>%
unique() %>%
mutate(pathway = fct_relevel(pathway, path_order)) %>%
arrange(pathway)
fig3 <- humann3_path_pcbi_bar_df %>%
# filter for only the KOs in KO cluster 1
filter(str_detect(KO, ko_cl1_tcs %>% str_c(collapse = "|"))) %>%
filter(Percent >= 5 | (Percent <= 5 & Genus == "Other")) %>% # filter out the genera with % < 5, but keep Other < 5
mutate(Genus = fct_relevel(Genus, "Other","unclassified"),
KO = fct_relevel(KO, ko_cl1_tcs),
pathway = fct_relevel(pathway, path_order)) %>%
arrange(pathway, KO) %>%
# mutate(Genus = fct_relevel(Genus, "Other","unclassified","Aggregatibacter","Capnocytophaga","Cardiobacterium","Eikenella","Haemophilus","Kingella","Lautropia","Neisseria","Ottowia","Streptococcus"),
#        Path = fct_relevel(Path, humann3_pathway_biplot_list %>%
#                             filter(Direction == "PC1+") %>%
#                             pull(Path))) %>%
ggplot(., aes(x=KO, y=Percent, fill = Genus)) +
geom_bar(stat = "identity") +
theme_minimal() +
scale_fill_manual(values = c("#B7B7B7","#616161", # "#F5F5F5" microshades_cvd_palette
"#DDFFA0","#97CE2F","#4E7705","#365303", # "#BDEC6F"
"#EFB6D6","#CC79A7","#7D3560","#572543", # "#A1527F",
"#A3E4D7","#48C9B0","#148F77","#0e6453",# "#56B4E9", "#43BA8F"
"#E7F4FF","#BCE1FF","#098BD9","#066197",
"#D8C7BE","#B78560","#7D3200","#572300",
"red","orange","yellow","green","cyan","blue","purple","magenta")) + #. "#009E73", "#7DCCFF", "#9D654C", "#CAA995" "#9E5C00"
theme(axis.text.y = element_text(size=16),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Percent") +
xlab("KEGG Ortholog") +
theme(title = element_text(size=12)) +
facet_grid(~pathway, scales = "free_x", space = 'free')
fig3
fig3 <- humann3_path_pcbi_bar_df %>%
# filter for only the KOs in KO cluster 1
filter(str_detect(KO, ko_cl1_tcs %>% str_c(collapse = "|"))) %>%
filter(Percent >= 10 | (Percent <= 10 & Genus == "Other")) %>% # filter out the genera with % < 5, but keep Other < 5
mutate(Genus = fct_relevel(Genus, "Other","unclassified"),
KO = fct_relevel(KO, ko_cl1_tcs),
pathway = fct_relevel(pathway, path_order)) %>%
arrange(pathway, KO) %>%
# mutate(Genus = fct_relevel(Genus, "Other","unclassified","Aggregatibacter","Capnocytophaga","Cardiobacterium","Eikenella","Haemophilus","Kingella","Lautropia","Neisseria","Ottowia","Streptococcus"),
#        Path = fct_relevel(Path, humann3_pathway_biplot_list %>%
#                             filter(Direction == "PC1+") %>%
#                             pull(Path))) %>%
ggplot(., aes(x=KO, y=Percent, fill = Genus)) +
geom_bar(stat = "identity") +
theme_minimal() +
scale_fill_manual(values = c("#B7B7B7","#616161", # "#F5F5F5" microshades_cvd_palette
"#DDFFA0","#97CE2F","#4E7705","#365303", # "#BDEC6F"
"#EFB6D6","#CC79A7","#7D3560","#572543", # "#A1527F",
"#A3E4D7","#48C9B0","#148F77","#0e6453",# "#56B4E9", "#43BA8F"
"#E7F4FF","#BCE1FF","#098BD9","#066197",
"#D8C7BE","#B78560","#7D3200","#572300",
"red","orange","yellow","green","cyan","blue","purple","magenta")) + #. "#009E73", "#7DCCFF", "#9D654C", "#CAA995" "#9E5C00"
theme(axis.text.y = element_text(size=16),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust = 1)) +
ylab("Percent") +
xlab("KEGG Ortholog") +
theme(title = element_text(size=12)) +
facet_grid(~pathway, scales = "free_x", space = 'free')
fig3
ottowia_sp <- fread("./05-Documentation.backup/ottowia_sp_counts.tsv")
# make the Library_ID dendrogram order a vector to factorize by
sample_den_order <- sample_cluster_info %>%
arrange(dendro_order) %>%
pull(Library_ID)
# add missing information from the species table, adding +1 like the others have for log-transformation
# Somehow GOY006.A0101 and LIS002.A0101 are missing from the species tables
missing_ot <- rbind(c("FUM003.A0101",1314), c("GOY006.A0102",1),c("ZAF001.A0101",1), c("LIS002.A0101",1)) %>%
as_tibble() %>%
rename(Library_ID = 1,
Counts = 2) %>%
mutate(Counts = as.numeric(Counts),
log_counts = log10(Counts)) %>%
mutate(log_counts = ifelse(str_detect(Library_ID, "GOY"),NA,log_counts)) %>%
mutate(log_counts = ifelse(str_detect(Library_ID, "LIS"),NA,log_counts))
ott_abund <- ottowia_sp %>%
full_join(., missing_ot) %>%
mutate(Counts = Counts / 100000) %>%
inner_join(., selected_metadata %>%
rownames_to_column("Library_ID") %>%
select(Library_ID)) %>%
mutate(Library_ID = fct_relevel(Library_ID, sample_den_order)) %>%
arrange(Library_ID) %>%
ggplot(., aes(x=Library_ID, y=Counts)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(text = element_text(size=9),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
theme(axis.text.x = element_blank()) +
# geom_hline(yintercept = 25000, linetype = "dotted") +
theme(panel.grid.major.y = element_line()) +
# scale_y_log10() +
# ylim(NA,500000) +
ylab("Ottowia counts. (x10^5)") +
xlab("Library") +
theme(title = element_text(size=10))
ott_abund
# ggsave("./06-publication/main_figures/Figure_4/ottowia_abund.pdf", plot = ott_abund, device = "pdf",
#        scale = 1, width = 17, height = 2, units = c("in"), dpi = 300)
# which continents have > 25000 reads per sample?
ottowia_sp %>%
full_join(., missing_ot) %>%
left_join(., metadata %>%
select(Library_ID, Continent)) %>%
left_join(., sample_cluster_info, by = "Library_ID") %>%
mutate(Continent = ifelse(is.na(Continent),"Pacific",Continent)) %>%
mutate(Cluster = as.character(Cluster)) %>%
filter(Counts >= 25000) %>%
arrange(Cluster, desc(Counts))
# arrange(Cluster,  Continent, Library_ID)
column_clusters
View(sample_cluster_info)
ott_abund <- ottowia_sp %>%
full_join(., missing_ot) %>%
mutate(Counts = Counts / 100000) %>%
inner_join(., selected_metadata %>%
rownames_to_column("Library_ID") %>%
select(Library_ID)) %>%
mutate(Library_ID = fct_relevel(Library_ID, sample_den_order)) %>%
arrange(Library_ID) %>%
ggplot(., aes(x=Library_ID, y=Counts)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(text = element_text(size=9),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
# theme(axis.text.x = element_blank()) +
# geom_hline(yintercept = 25000, linetype = "dotted") +
theme(panel.grid.major.y = element_line()) +
# scale_y_log10() +
# ylim(NA,500000) +
ylab("Ottowia counts. (x10^5)") +
xlab("Library") +
theme(title = element_text(size=10))
ott_abund
# make the Library_ID dendrogram order a vector to factorize by
sample_den_order <- sample_cluster_info %>%
arrange(Cluster, dendro_order) %>%
pull(Library_ID)
sample_den_order
ott_abund <- ottowia_sp %>%
full_join(., missing_ot) %>%
mutate(Counts = Counts / 100000) %>%
inner_join(., selected_metadata %>%
rownames_to_column("Library_ID") %>%
select(Library_ID)) %>%
mutate(Library_ID = fct_relevel(Library_ID, sample_den_order)) %>%
arrange(Library_ID) %>%
ggplot(., aes(x=Library_ID, y=Counts)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(text = element_text(size=9),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
# theme(axis.text.x = element_blank()) +
# geom_hline(yintercept = 25000, linetype = "dotted") +
theme(panel.grid.major.y = element_line()) +
# scale_y_log10() +
# ylim(NA,500000) +
ylab("Ottowia counts. (x10^5)") +
xlab("Library") +
theme(title = element_text(size=10))
ott_abund
q()
